//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Securypt.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class MyStrings_en {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MyStrings_en() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SecuryptMVC.Views.Shared.MyStrings-en", typeof(MyStrings_en).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Files.
        /// </summary>
        public static string BrowseFiles {
            get {
                return ResourceManager.GetString("BrowseFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An authorized party, however, is able to decode the ciphertext using a decryption algorithm, that usually requires a secret decryption key, 
        ///            that adversaries do not have access to. For technical reasons, an encryption scheme usually needs a key-generation algorithm, to randomly produce keys..
        /// </summary>
        public static string Decrypt_desc {
            get {
                return ResourceManager.GetString("Decrypt_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypt.
        /// </summary>
        public static string DecryptH2 {
            get {
                return ResourceManager.GetString("DecryptH2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Decrypting!.
        /// </summary>
        public static string DecryptHome_btn {
            get {
                return ResourceManager.GetString("DecryptHome_btn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag and drop your files here.
        /// </summary>
        public static string DragArea {
            get {
                return ResourceManager.GetString("DragArea", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Drag &amp; Drop file upload.
        /// </summary>
        public static string DragDropH2 {
            get {
                return ResourceManager.GetString("DragDropH2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In cryptography, encryption is the process of encoding a message or information in such a way that only authorized 
        ///           parties can access it. Encryption does not itself prevent interference, but denies the intelligible content to a would-be interceptor. 
        ///           In an encryption scheme, the intended information or message, referred to as plaintext, is encrypted using an encryption 
        ///           algorithm – a cipher – generating ciphertext that can only be read if decrypted..
        /// </summary>
        public static string Encrypt_desc {
            get {
                return ResourceManager.GetString("Encrypt_desc", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt.
        /// </summary>
        public static string EncryptH2 {
            get {
                return ResourceManager.GetString("EncryptH2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start Encrypting!.
        /// </summary>
        public static string EncryptHome_btn {
            get {
                return ResourceManager.GetString("EncryptHome_btn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encrypt.
        /// </summary>
        public static string EncryptUpload_btn {
            get {
                return ResourceManager.GetString("EncryptUpload_btn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to How to start.
        /// </summary>
        public static string HowStartH2 {
            get {
                return ResourceManager.GetString("HowStartH2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Get started.
        /// </summary>
        public static string Jumbo_btn {
            get {
                return ResourceManager.GetString("Jumbo_btn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Securypt allows you to encrypt and decrypt your files. Files may be saved locally or stored on a server. Create an account for a public key.
        /// </summary>
        public static string Jumbotron {
            get {
                return ResourceManager.GetString("Jumbotron", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to To get started, register for an account to generate your public key. Keep this saved somewhere where you won&apos;t lose it..
        /// </summary>
        public static string Tutorial_pt1 {
            get {
                return ResourceManager.GetString("Tutorial_pt1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Click on the &apos;Upload&apos; tab to start. Drag and drop or upload files from your computer onto the upload area. Once all your files
        ///            have been selected, click &quot;Encrypt&quot; to encrypt your files. After, your encrypted files will be stored locally
        ///            on your computer or you can choose to store them on a server..
        /// </summary>
        public static string Tutorial_pt2 {
            get {
                return ResourceManager.GetString("Tutorial_pt2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Decrypting your files is just as easy. Drag and drop or upload your encrypted files for decrytion..
        /// </summary>
        public static string Tutorial_pt3 {
            get {
                return ResourceManager.GetString("Tutorial_pt3", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Or upload your files here.
        /// </summary>
        public static string Upload_alt {
            get {
                return ResourceManager.GetString("Upload_alt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uploaded Files.
        /// </summary>
        public static string UploadedFilesH2 {
            get {
                return ResourceManager.GetString("UploadedFilesH2", resourceCulture);
            }
        }
    }
}
